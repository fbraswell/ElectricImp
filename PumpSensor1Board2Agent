// Agent test code

// Send SMS message by Twilio
const TWILIO_ACCOUNT_SID = "AC2125ebaf03194d2f1cf1902b0c4592bb"
const TWILIO_AUTH_TOKEN = "32f6d0007503cc300765cf6ef9e4e4d0"
const TWILIO_FROM_NUMBER = "+18017011865" // your phone no goes here
const TWILIO_TO_NUMBER = "+17657601638" // FMB destination phone no
//const TWILIO_TO_NUMBER = "+14053975091" // WellMark destination phone no
// const TWILIO_TO_NUMBER = "+18473402434"  // C// Agent test code

// Send SMS message by Twilio
const TWILIO_ACCOUNT_SID = "AC2125ebaf03194d2f1cf1902b0c4592bb"
const TWILIO_AUTH_TOKEN = "32f6d0007503cc300765cf6ef9e4e4d0"
const TWILIO_FROM_NUMBER = "+18017011865" // your phone no goes here
const TWILIO_TO_NUMBER = "+17657601638" // FMB destination phone no
//const TWILIO_TO_NUMBER = "+14053975091" // WellMark destination phone no
// const TWILIO_TO_NUMBER = "+18473402434"  // Crump destination phone no
// const TWILIO_TO_NUMBER = "+13174320753" // Randy destination phone no
const ZULU_TIME_OFFSET = 5
// globalvar <- "230789eb6e4936ee"; // test
alarm_high <- -1.0; // high level alarm
alarm_low <- -1.0; // low level alarm
// qpd_setpoint <- 1.0; // quarts per day setpoint
impid <- "no imp id yet"; // remember the imp ID

function send_sms(number, message) {
    server.log("Sending sms:");
    server.log(message);
    local twilio_url = format("https://api.twilio.com/2010-04-01/Accounts/%s/SMS/Messages.json", TWILIO_ACCOUNT_SID);
    local auth = "Basic " + http.base64encode(TWILIO_ACCOUNT_SID+":"+TWILIO_AUTH_TOKEN);
    local body = http.urlencode({From=TWILIO_FROM_NUMBER, To=number, Body=message});
    local req = http.post(twilio_url, {Authorization=auth}, body);
    local res = req.sendsync();
    if(res.statuscode != 201) {
        server.log("error sending message: "+res.body);
    }
}

device.on("sendSMS", function(options) {
    if (options.other == 1) {
    send_sms(TWILIO_TO_NUMBER, options.mess);
    }
    else {
    local req = http.get("https://wellmark.webscript.io/smstimer");
    local res = req.sendsync();
    local smstimer = res.body.tointeger();  
    local datetime = date();
    server.log("smstimer");
    server.log(smstimer);
    if (smstimer == 0 && options.highlevelalarm) {
        send_sms(TWILIO_TO_NUMBER, format("High Level Alarm on Production Water Tank 91 Reese Lease %d:%d - Wellmark Monitoring Services", datetime.hour-5, datetime.min));
    }
    else if (smstimer == 3*6) {
        send_sms(TWILIO_TO_NUMBER, format("Days to Overfill: 30 on Crude Oil Tank 83 Reese Lease %d:%d - Wellmark Monitoring Services", datetime.hour-5, datetime.min));
    }
    else if (smstimer == 6*6) {
        send_sms(TWILIO_TO_NUMBER, format("Days to Empty: 1 on Well 22 Chem Tank Reese Lease %d:%d - Wellmark Monitoring Services", datetime.hour-5, datetime.min));
    }
    smstimer += 1;
    if (smstimer > 9*6) {
        smstimer = 0;
    }
    local headers = { "Content-Type":"text/plain" };
    local req = http.post("https://wellmark.webscript.io/smstimer", headers, format("%d", smstimer));
    local res = req.sendsync();
    }
});

// 1. Name and create a Xively feed
// 2. Get the activation code and run the curl script to activate
// 3. Record the activation response, which includes the apikey and feed number
// 5. In the table below, make the entry under the feed name created in Xively, and activation data returned
// 6. When an Imp is ready to be activated for one of the Xively feeds, get the ImpID and put it in the appropriate slot

imp_table <- 
    {
        // insert new imps below
        // --This agent is for Chemical Pumps only!
        InformaChemPump1 = {   
                            impid = "230789eb6e4936ee", 
//                            impid = "232ace4dead3dbee", 
                            feed = 627874217, apikey = "w1buKrbzAknYTWiVGUsIsYY4C0asD1iF5KErllKbXR3VpEMi"  
                           , sample_interval = 30, voltage_enable = 1 },
        // DC Modbus
         InformaChemPump2 = {   impid = "234f47eb6e4936ee", feed = 1348944517, apikey = "8aavsrXlDAfIevDIaH9KRNQndh2gcFR0ubABd47dHod0jiqX"  
                           , sample_interval = 5 },
        // AC Modbus
         InformaChemPump3 = {   impid = "23423feb6e4936ee", feed = 1325563619, apikey = "yvIsehmvB1EGt4rAQrKObbDTFdtNIgExhvkXoi5h75R5xRZt"  
                           , sample_interval = 10 },
//        InformaChemPump1 = {   impid = "233c66eb6e4936ee", feed = 627874217, apikey = "w1buKrbzAknYTWiVGUsIsYY4C0asD1iF5KErllKbXR3VpEMi" 
//                                 , sample_interval = 5, voltage_enable = 0  },
        InformaBrineTank1 = {   impid = "232ace4dead3dbee", feed = 1432343757, apikey = "9ehXeWj4AFJ5TD2rKiRInZ664Xv6qiuiGtxciWGLseWIxJ3e"  },
        InformaCrudeTank1 = {   impid = "2307xx", feed = 2033339257, apikey = "fIiRLSNzPa6k4aLm6MahSd3G9NTqwwEsL3UWUql2EGrHKp9o"  },
        InformaChemTank1 = {   impid = "2307xx", feed = 2105788416, apikey = "CbJjQsmbIKKhmvfwNXTXm2geO9lmsROQX3yB1YQKo37F6H1o"  },
        
        InformaBrineTank2 = {   impid = "2307xx", feed = 670154089, apikey = "j8V2lVnlChthy46Ocv4epRgONhM9Iupu5cltAcfy9KzCk5es",
                                sample_interval = 30, voltage_enable = 0  },
        InformaCrudeTank2 = {   impid = "2307xx", feed = 865841957, apikey = "kql4mJhhNrGWqAimEQOTJkzOSqwXzN2k9YmIFXbBY5n82ZEn", 
                                  sample_interval = 20, voltage_enable = 0  },
        InformaChemTank2 = {   impid = "23484feb6e4936ee", feed = 1995311635, apikey = "EY8ON0sBYDAVmocxjYIrWAxUggZzxcNrrO1R9NsvXyxthfu1"  }, 

        DevonChemPump1 = {   impid = "233a1aeb6e4936ee", feed = 2008148184, apikey = "qEIbXubi2bD6DjQBNkyWEGv5fBq2kbCijIxvS3TyZ30dHhlT"  },
        DevonChemPump2 = {   impid = "23560c4cead3dbee", feed = 802343163, apikey = "m1tKlcAgqxPY180HDQe4f82IJWA9LIvFI6dcyuhCvPePYUmb"  },
        DevonChemTank1 = {   impid = "2307xx", feed = 547315046, apikey = "lNbRVoON2zpFe9LmMrBrS86Fni0Zm1W6h6x2ayumNhDYQUav"  },
        DevonChemTank2 = {   impid = "2307xx", feed = 277137983, apikey = "OjD9OsvgG4NpsBCtoLYt67FLMBmzOnLbXTQFHoFlHu3l0R21"  },
        DevonBrineTank1 = {   impid = "2307xx", feed = 1761598148, apikey = "vlylRGnqifM3rpjcmdZRNk6ZC62Akl2j0KTAq7SCG4CQSR3G"  },
        DevonBrineTank2 = {   impid = "2307xx", feed = 33889245, apikey = "z7ltHrzMtiEfbYJI6hrAPEWQHVzh7VXPMwfnZH0eUizGA2vb"  },

        WellMarkDemoChemPump = {   impid = "2307xx", feed = 1266829895, apikey = "MI5vJbWAsfChUMfJc5bzRmAHpx0vcRWesnzuzaR3Wq6SuU0c"  },
        WellMarkDemoLevel = {   impid = "2307xx", feed = 2012325919, apikey = "suAoU5udCBqBOD9BmM3RGTuCyVf6STHHHmOcssfEjPhL1tPV"  },
        WellMarkDemoSwitch = {   impid = "2307xx", feed = 848109198, apikey = "CLT3ehpzXv1RAwYQDsSzE8HmXQLcjspRBPcc3YQDgbwSKahT"  },

        EOGChemPump1 = {   impid = "237c523643fc42ee", feed = 2099714343, apikey = "mRJx9jKahQDHdIVDjd1GaISZOM4pc3XlV5QBPFUgQk7avbjE"  
                           , sample_interval = 10},
        EOGChemTank1 = {   impid = "xx237c523643fc42ee", feed = 2099714343, apikey = "mRJx9jKahQDHdIVDjd1GaISZOM4pc3XlV5QBPFUgQk7avbjE"  
                           , sample_interval = 10}
        
    }; // end imp_table

agent_myimpid <- 0; // Imp ID
agent_myapikey <- 0; // api key
agent_myfeed <- 0;  // feed id
agent_myxivelyname <- ""; // Xively feed name
impid_lo <- 0x230789eb;
impid_hi <- 0x6e4936ee;

// This function gets the ImpID from the associated Imp
// and then connects it to a specific Xively data feed
device.on("impid", function(impid)
{
//    server.log("Agent received ImpID: "+impid.ImpID);
    // need to put an x infront of the imp id
    agent_myimpid = format("%s",impid.ImpID);
local agent_BootCount = impid.BootCount;
//    agent_myimpid = impid.ImpID;
//    server.log("Agent received ImpID: "+agent_myimpid);
//    server.log("Imp hi "+impid_hi+"; Imp lo "+impid_lo);
//    server.log(format("Imp hi: %x; Imp lo: %x", impid_hi, impid_lo));
    
    foreach ( name, key in imp_table)
    {
//        server.log("-value of key: "+key+"value of feed: "+key.feed);
//         server.log(format("-name: %s: value of key: %s, feed: %d", name, key.impid, key.feed));
        if (key.impid == agent_myimpid)
        {
            agent_myxivelyname = name;
            agent_myapikey = key.apikey;
            agent_myfeed = key.feed;
//            server.log(format("---found name: %s", name));
            if(agent_BootCount != 1) // only do this at beginning of run
            {
                if ("sample_interval" in key)
                {
//                    server.log("found sample_interval in key");
                    device.send("interval", {interval = key.sample_interval});
                }
                if ("voltage_enable" in key)
                {
//                    server.log("found voltage_enable in key");
                    device.send("voltage_enable", {voltage_enable = key.voltage_enable});
                }
            } // if(agent_BootCount < 2) 
//            if(agent_BootCount == 1) // only on first cold boot
//            {
//                server.log("** send Xively name!");
                device.send("XivelyName", {XivelyName = agent_myxivelyname});
//            }
            break;
        } // if (key.impid == agent_myimpid)
    } // foreach ( key in imp_table)
    
//    server.log("Agent api key: "+agent_myapikey);

});


function fetchNewSetpoint() {

    local getValueURL = format(
        "%s%d%s%s%s",
        "https://wellmark.webscript.io/get-xively-channel-value?feedID=",
//        "https://wellmark-user.webscript.io/get-value?feedID=",
        agent_myfeed,
        "&apiKey=",
        agent_myapikey,
        "&xivelyChannelName=Set_QuartsPerDay");
//    server.log(format("--Get-Value URL: %s", getValueURL));
    local getValueRequest = http.get(getValueURL);
    getValueRequest.sendasync(function(response)
    {
        if(response.statuscode == 200)
        {
            server.log(format("--The response code: %d and QPD set point: ", response.statuscode)+ response.body);
            device.send("newsetpoint", response.body.tofloat());
        }
    });
}

function fetchNewAlarmHigh() {

    local getValueURL = format(
        "%s%d%s%s%s",
        "https://wellmark.webscript.io/get-xively-channel-value?feedID=",
//        "https://wellmark-user.webscript.io/get-value?feedID=",
        agent_myfeed,
        "&apiKey=",
        agent_myapikey,
        "&xivelyChannelName=Set_AlarmHigh");
//    server.log(format("--Get-Value URL: %s", getValueURL));
    local getValueRequest = http.get(getValueURL);
    getValueRequest.sendasync(function(response)
    {
        server.log(format("--The response code: %d and high alarm: ", response.statuscode)+ response.body);
//        device.send("newalarmhigh", response.body.tofloat());
        if(response.statuscode == 200) // good response
        {
            alarm_high = response.body.tofloat();
        }
    });
}

function fetchNewAlarmLow() {

    local getValueURL = format(
        "%s%d%s%s%s",
        "https://wellmark.webscript.io/get-xively-channel-value?feedID=",
//        "https://wellmark-user.webscript.io/get-value?feedID=",
        agent_myfeed,
        "&apiKey=",
        agent_myapikey,
        "&xivelyChannelName=Set_AlarmLow");
//    server.log(format("--Get-Value URL: %s", getValueURL));
    local getValueRequest = http.get(getValueURL);
    getValueRequest.sendasync(function(response)
    {
        server.log(format("--The response code: %d and low alarm: ", response.statuscode)+ response.body);
//        device.send("newalarmlow", response.body.tofloat());
        if(response.statuscode == 200) // good response
        {
            alarm_low = response.body.tofloat();
        }
    });
}

function fetchTags() {

    local getValueURL = format(
        "%s%d%s%s%s",
        "https://wellmark.webscript.io/get-xively-feed-info-test?feedID=",
//        "https://wellmark-user.webscript.io/get-value?feedID=",
        agent_myfeed,
        "&apiKey=",
        agent_myapikey,
        "");
//    server.log(format("--Get-Value URL: %s", getValueURL));
    local getValueRequest = http.get(getValueURL);
    getValueRequest.sendasync(function(response)
    {
        server.log(format("--The response code: %d and tags: ", response.statuscode)+ response.body);
//        device.send("newalarmlow", response.body.tofloat());
        if(response.statuscode == 200) // good response
        {
            impid = response.body;
        }
    });
}

device.on("csv", function(csv) {
    
    if (csv.len() > 0)
    {
        server.log("Sending Xively " + agent_myxivelyname + " this data: " + csv);    

        http.put(format("%s%d%s","https://api.xively.com/v2/feeds/", agent_myfeed, ".csv"), 
        {
            "X-Api-Key": agent_myapikey,
            "Authorization": "Basic ZmJyYXN3ZWxsOm1lcnJpdHQxODY1"
        }, csv).sendasync(function(response) 
        {
//            server.log("xively response: "+response.statuscode);
            fetchNewSetpoint();
        });
    }
    else {
        server.log("Nothing to send to Xively.");    
        fetchNewSetpoint();
    }
    fetchNewAlarmHigh();
    fetchNewAlarmLow();
    fetchTags();
    local a = split(csv, ",\n");
//    server.log("after split: "+a);
    local i = 0;
    foreach( val in a)
    {
        if (val == "Status_BootPass")
        {
            server.log(format("pair %s: %s; alarm high: %5.2f; low: %5.2f", a[i], a[i+1], alarm_high, alarm_low));
            server.log("Imp ID: "+agent_myimpid+" Xively Name: "+agent_myxivelyname);
            server.log("Xively Feed: "+agent_myfeed+" api Key: "+agent_myapikey);
            local datetime = date();
            if(a[i+1].tofloat() <= 1.0) // catch first pass
            {
                
                send_sms(TWILIO_TO_NUMBER, format("Starting Up Imp Cold Boot! %d:%d - %s", datetime.hour-5, datetime.min, agent_myxivelyname));
                // "13.5 ft Hi Level Alarm Brine Tank 1 (or 2). Devon Reed No.  1-21H WellMark Monitoring Services
                // Hi Lev DevinBrineTank1 Reed No. 1-21H WellMark Monitoring Service
                
                send_sms(TWILIO_TO_NUMBER, format("Hi Lev %s Reed No. 1-21H %d:%d - WellMark Monitoring Service", agent_myxivelyname, datetime.hour-5, datetime.min));
            } else // boot pass 2 and up
            {
//                send_sms(TWILIO_TO_NUMBER, format("Starting Up Imp Warm Boot! %d:%d - %s", datetime.hour-5, datetime.min, agent_myxivelyname));
            }
        }
        i++; // increment array index
    }
});

// agent_myimpid <- 0; // Imp ID
// agent_myapikey <- 0; // api key
// agent_myfeed <- 0;  // feed id
// agent_myxivelyname <- ""; // Xively feed name
rump destination phone no
// const TWILIO_TO_NUMBER = "+13174320753" // Randy destination phone no

function send_sms(number, message) {
    server.log("Sending sms:");
    server.log(message);
    local twilio_url = format("https://api.twilio.com/2010-04-01/Accounts/%s/SMS/Messages.json", TWILIO_ACCOUNT_SID);
    local auth = "Basic " + http.base64encode(TWILIO_ACCOUNT_SID+":"+TWILIO_AUTH_TOKEN);
    local body = http.urlencode({From=TWILIO_FROM_NUMBER, To=number, Body=message});
    local req = http.post(twilio_url, {Authorization=auth}, body);
    local res = req.sendsync();
    if(res.statuscode != 201) {
        server.log("error sending message: "+res.body);
    }
}

device.on("sendSMS", function(options) {
    if (options.other == 1) {
    send_sms(TWILIO_TO_NUMBER, options.mess);
    }
    else {
    local req = http.get("https://wellmark.webscript.io/smstimer");
    local res = req.sendsync();
    local smstimer = res.body.tointeger();  
    local datetime = date();
    server.log("smstimer");
    server.log(smstimer);
    if (smstimer == 0 && options.highlevelalarm) {
        send_sms(TWILIO_TO_NUMBER, format("High Level Alarm on Production Water Tank 91 Reese Lease %d:%d - Wellmark Monitoring Services", datetime.hour-5, datetime.min));
    }
    else if (smstimer == 3*6) {
        send_sms(TWILIO_TO_NUMBER, format("Days to Overfill: 30 on Crude Oil Tank 83 Reese Lease %d:%d - Wellmark Monitoring Services", datetime.hour-5, datetime.min));
    }
    else if (smstimer == 6*6) {
        send_sms(TWILIO_TO_NUMBER, format("Days to Empty: 1 on Well 22 Chem Tank Reese Lease %d:%d - Wellmark Monitoring Services", datetime.hour-5, datetime.min));
    }
    smstimer += 1;
    if (smstimer > 9*6) {
        smstimer = 0;
    }
    local headers = { "Content-Type":"text/plain" };
    local req = http.post("https://wellmark.webscript.io/smstimer", headers, format("%d", smstimer));
    local res = req.sendsync();
    }
});

// 1. Name and create a Xively feed
// 2. Get the activation code and run the curl script to activate
// 3. Record the activation response, which includes the apikey and feed number
// 5. In the table below, make the entry under the feed name created in Xively, and activation data returned
// 6. When an Imp is ready to be activated for one of the Xively feeds, get the ImpID and put it in the appropriate slot

imp_table <- 
    {
        // insert new imps below
        // --This agent is for Chemical Pumps only!
        InformaChemPump1 = {   
                            impid = "230789eb6e4936ee", 
//                            impid = "232ace4dead3dbee", 
                            feed = 627874217, apikey = "w1buKrbzAknYTWiVGUsIsYY4C0asD1iF5KErllKbXR3VpEMi"  
                           , sample_interval = 60, voltage_enable = 1 },
        // DC Modbus
         InformaChemPump2 = {   impid = "234f47eb6e4936ee", feed = 1348944517, apikey = "8aavsrXlDAfIevDIaH9KRNQndh2gcFR0ubABd47dHod0jiqX"  
                           , sample_interval = 5 },
        // AC Modbus
         InformaChemPump3 = {   impid = "2343b6eb6e4936ee", feed = 1325563619, apikey = "yvIsehmvB1EGt4rAQrKObbDTFdtNIgExhvkXoi5h75R5xRZt"  
                           , sample_interval = 5 },
//        InformaChemPump1 = {   impid = "233c66eb6e4936ee", feed = 627874217, apikey = "w1buKrbzAknYTWiVGUsIsYY4C0asD1iF5KErllKbXR3VpEMi" 
//                                 , sample_interval = 5, voltage_enable = 0  },
        InformaBrineTank1 = {   impid = "2307xx", feed = 1432343757, apikey = "9ehXeWj4AFJ5TD2rKiRInZ664Xv6qiuiGtxciWGLseWIxJ3e"  },
        InformaCrudeTank1 = {   impid = "2307xx", feed = 2033339257, apikey = "fIiRLSNzPa6k4aLm6MahSd3G9NTqwwEsL3UWUql2EGrHKp9o"  },
        InformaChemTank1 = {   impid = "2307xx", feed = 2105788416, apikey = "CbJjQsmbIKKhmvfwNXTXm2geO9lmsROQX3yB1YQKo37F6H1o"  },
        
        InformaBrineTank2 = {   impid = "2307xx", feed = 670154089, apikey = "j8V2lVnlChthy46Ocv4epRgONhM9Iupu5cltAcfy9KzCk5es",
                                sample_interval = 30, voltage_enable = 0  },
        InformaCrudeTank2 = {   impid = "2307xx", feed = 865841957, apikey = "kql4mJhhNrGWqAimEQOTJkzOSqwXzN2k9YmIFXbBY5n82ZEn", 
                                  sample_interval = 20, voltage_enable = 0  },
        InformaChemTank2 = {   impid = "23484feb6e4936ee", feed = 1995311635, apikey = "EY8ON0sBYDAVmocxjYIrWAxUggZzxcNrrO1R9NsvXyxthfu1"  }, 

        DevonChemPump1 = {   impid = "233a1aeb6e4936ee", feed = 2008148184, apikey = "qEIbXubi2bD6DjQBNkyWEGv5fBq2kbCijIxvS3TyZ30dHhlT"  },
        DevonChemPump2 = {   impid = "23560c4cead3dbee", feed = 802343163, apikey = "m1tKlcAgqxPY180HDQe4f82IJWA9LIvFI6dcyuhCvPePYUmb"  },
        DevonChemTank1 = {   impid = "2307xx", feed = 547315046, apikey = "lNbRVoON2zpFe9LmMrBrS86Fni0Zm1W6h6x2ayumNhDYQUav"  },
        DevonChemTank2 = {   impid = "2307xx", feed = 277137983, apikey = "OjD9OsvgG4NpsBCtoLYt67FLMBmzOnLbXTQFHoFlHu3l0R21"  },
        DevonBrineTank1 = {   impid = "2307xx", feed = 1761598148, apikey = "vlylRGnqifM3rpjcmdZRNk6ZC62Akl2j0KTAq7SCG4CQSR3G"  },
        DevonBrineTank2 = {   impid = "2307xx", feed = 33889245, apikey = "z7ltHrzMtiEfbYJI6hrAPEWQHVzh7VXPMwfnZH0eUizGA2vb"  },

        WellMarkDemoChemPump = {   impid = "2307xx", feed = 1266829895, apikey = "MI5vJbWAsfChUMfJc5bzRmAHpx0vcRWesnzuzaR3Wq6SuU0c"  },
        WellMarkDemoLevel = {   impid = "2307xx", feed = 2012325919, apikey = "suAoU5udCBqBOD9BmM3RGTuCyVf6STHHHmOcssfEjPhL1tPV"  },
        WellMarkDemoSwitch = {   impid = "2307xx", feed = 848109198, apikey = "CLT3ehpzXv1RAwYQDsSzE8HmXQLcjspRBPcc3YQDgbwSKahT"  },

        EOGChemPump1 = {   impid = "237c523643fc42ee", feed = 2099714343, apikey = "mRJx9jKahQDHdIVDjd1GaISZOM4pc3XlV5QBPFUgQk7avbjE"  
                           , sample_interval = 10},
        EOGChemTank1 = {   impid = "xx237c523643fc42ee", feed = 2099714343, apikey = "mRJx9jKahQDHdIVDjd1GaISZOM4pc3XlV5QBPFUgQk7avbjE"  
                           , sample_interval = 10}
        
    }; // end imp_table

agent_myimpid <- 0; // Imp ID
agent_myapikey <- 0; // api key
agent_myfeed <- 0;  // feed id
agent_myxivelyname <- ""; // Xively feed name
impid_lo <- 0x230789eb;
impid_hi <- 0x6e4936ee;

// This function gets the ImpID from the associated Imp
// and then connects it to a specific Xively data feed
device.on("impid", function(impid)
{
//    server.log("Agent received ImpID: "+impid.ImpID);
    // need to put an x infront of the imp id
    agent_myimpid = format("%s",impid.ImpID);
local agent_BootCount = impid.BootCount;
//    agent_myimpid = impid.ImpID;
    server.log("Agent received ImpID: "+agent_myimpid);
    server.log("Imp hi "+impid_hi+"; Imp lo "+impid_lo);
    server.log(format("Imp hi: %x; Imp lo: %x", impid_hi, impid_lo));
    
    foreach ( name, key in imp_table)
    {
//        server.log("-value of key: "+key+"value of feed: "+key.feed);
        if (key.impid == agent_myimpid)
        {
            agent_myxivelyname = name;
            agent_myapikey = key.apikey;
            agent_myfeed = key.feed;
            if(agent_BootCount != 1) // only do this at beginning of run
            {
                if ("sample_interval" in key)
                {
//                    server.log("found sample_interval in key");
                    device.send("interval", {interval = key.sample_interval});
                }
                if ("voltage_enable" in key)
                {
//                    server.log("found voltage_enable in key");
                    device.send("voltage_enable", {voltage_enable = key.voltage_enable});
                }
            } // if(agent_BootCount < 2) 
        } // if (key.impid == agent_myimpid)
    } // foreach ( key in imp_table)
    
//    server.log("Agent api key: "+agent_myapikey);

});


function fetchNewSetpoint() {

    local getValueURL = format(
        "%s%d%s%s%s",
        "https://wellmark-user.webscript.io/get-value?feedID=",
        agent_myfeed,
        "&apiKey=",
        agent_myapikey,
        "&xivelyChannelName=Set_QuartsPerDay");
//    server.log(format("--Get-Value URL: %s", getValueURL));
    local getValueRequest = http.get(getValueURL);
    getValueRequest.sendasync(function(response)
    {
        server.log(format("--The response code: %d and set point: ", response.statuscode)+ response.body);
        device.send("newsetpoint", response.body.tofloat());
    });

}

device.on("csv", function(csv) {
    
    if (csv.len() > 0){
        server.log("Sending Xively " + agent_myxivelyname + " this data: " + csv);    

        http.put(format("%s%d%s","https://api.xively.com/v2/feeds/", agent_myfeed, ".csv"), {
            "X-Api-Key": agent_myapikey,
            "Authorization": "Basic ZmJyYXN3ZWxsOm1lcnJpdHQxODY1"
        }, csv).sendasync(function(response) {
            server.log("xively response: "+response.statuscode);
            fetchNewSetpoint();
        });
    }
    else {
        server.log("Nothing to send to Xively.");    
        fetchNewSetpoint();
    }

});
